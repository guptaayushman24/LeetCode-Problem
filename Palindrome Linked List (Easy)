/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode ptr1 = head;
        ArrayList<Integer> al = new ArrayList<>();
        while (ptr1!=null){
            al.add(ptr1.val);
           
            ptr1 = ptr1.next;
        }
         ArrayList<Integer> rev_al = new ArrayList<>();
         for (int i=al.size()-1;i>=0;i--){
             rev_al.add(al.get(i));
         }

         int i=0;
         int j=0;

         while (i<al.size() && j<rev_al.size()){
             if (al.get(i)==rev_al.get(j)){
                 i++;
                 j++;
             }
             else{
                 return false;
             }
         }

         return true;
        
        
    }


}

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
# Here we do not have use any extra space and we have swap the nodes directly
class Solution {
    public ListNode swapPairs(ListNode head) {
        ListNode dummy = new ListNode();
        dummy.next = head;

      
ListNode point = dummy;

        while (point.next!=null &&point.next.next!=null){
        ListNode swap1 = point.next;
        ListNode swap2 = point.next.next;
            
        // Actually Swap
        swap1.next = swap2.next;
        swap2.next =swap1;

        // Prepare for the next
        point.next = swap2;
        point = swap1;
          
        }
         return dummy.next;
    }
}

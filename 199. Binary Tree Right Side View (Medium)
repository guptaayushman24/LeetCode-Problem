/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public static void rightView(ArrayList<Integer> al,TreeNode node,int level){
        if (node==null){
            return;
        }
        if (level==al.size()){
            al.add(node.val);
        }
        rightView(al,node.right,level+1);
        rightView(al,node.left,level+1);
    }
    public List<Integer> rightSideView(TreeNode root) {
        ArrayList<Integer> al = new ArrayList<>();
        rightView(al,root,0);

    return al;
    }
}
